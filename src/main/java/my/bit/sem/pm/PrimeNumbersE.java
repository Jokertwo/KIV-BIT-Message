package my.bit.sem.pm;

import java.math.BigInteger;

public enum PrimeNumbersE {

    pN1("16614303727694582169160247679062266356299231980424032770314735426386331043150828014955871122879062603769232364307656137185182018081494030893728920460841699884464468658266220380850179067737925091476400227305217788313020704648484166261819121295558320569220643803956265957122300077733012009548017799900209694162008769998320002852535108084171413043835849939099652424073278584059501359751431465410238298344898252866011164377515135952364820967172130067769744741466872151821895031538740535371105719400844849129769552706918123085394021538937766760473938802583845984072093296769627767190453483276582726627130663209108200369823"),
    pN2("28014296335010101828084072240369613610542118456257604457958694729467454339099446241946359478844381950489144597575986372860283475137176996623063743135791213353153686128952798364807827118589507966360211087246665287933102520983780190272296467130696797415352489189308630934260516637301327125624597074848437482381174854860273572693988949213339100942338166954248373515165419189196936106939783538032937988734022175978697198686115760773376797898912087023062803579813907666611591291389972245716662935287624596556259207908478705215819281785975419947397361079237443595068067358117389516890828406588688061431215408714156474090587"),
    pN3("24289965881123043413913980483182356440747596361918892618280629909549978170178951615674310756587648893667782756303653113964391698801988602162845425643382505031093447247977639985074684473069316174980276018479603155200986196445705505019106489047399651980415926527205606783454631304772539454499336689095435637501871400583455032152616102519244351454606858191353941848675693434324721768142331498631734300602623479310412208484866338187314022687611625986964270891080026498411885484419896561667170028748460302842012420786881270621706484716490623040198271586961011175868616929525450102944775691757454534204973168543410211405383"),
    pN4("24336592441741741718228549669998698116009468551495644303755985145912541211903567747919144550587870337172431677604085906008170734332005874676839857183260875996943795145181463141809245347225022751944938184221743692060547944773169022575112369821103679536886818678131692292999140898219268357872835731030424716122860724740397328162631573381910358261083907995232546724924681995118161279520645136264025931622263699128565549536987938432296730742602715330980271030432745287225150844292473324320693638905994089662302699420452270225525539644040164013616074050139729029433442403103128141968283023777736061538458539905058045766679"),
    pN5("30871863661741911332330681131760406346333780815244441267523973252095777942031361839216140827028491666030594424059732836807427622332290074763225761647997921803142470603453739355841955386261969603960236816427008193878394508555144876711072957149102375426568702129734700205750505768230674648251918627685131451176447807364153427002140234770235086970430420671020462126406667408218760222882837210339007235313233387808043689382892265236961873387690402776235267455333926899945625201270751249394487567834400439510411911995772480796551221129230774273436193403906841188675478182940964371271045120878173024720732517269479345605959"),
    pN6("29598663728547761841188531821590381466900777931306637972136547484504960120598068584095782837901893499564578968361807287113841754368943040988868639844404273979616473508728271249322778177854960596911318823760243485266884763676409864247267710007274633200096157864133260780390059975255249353752219515948449617528990831734252272565721485263058198735701530350234837605841696847509461365882621422451604460740711734331975562729740591820409667769931892487387941292202915112808848476545323615270367233896906953999476398341505382004296768142477749338417028369378073836109945952351382031835481272798104642322597894053631935042529"),
    pN7("27920533102053776254006271624936347229830305956760832656132676713571920423168751641672339652575273081702514631815933843820123219587972494400943624484233103836534986195640028031375220267668506134311694910799699384082009846902560425402156912186181770553953739940378947205580957051600881548712876957234517953376745895797108913678506736669428471519682229395319265259427404938754369407915717161113353262308004385127403011209984693735179507722029750266027024399598471408665397281729404509334466831691098767032176696844855033978655096556043681434684977014636175452415824707228072153477256550888983692454132760200789149911601"),
    pN8("24381222128234201092517682673685980742803458601292642038125474367487568194470168565815531139096273693786670258623016062840493922610782644448569849552840956147314412485586644153253575351254622970136283471582241388712226861874157885433802873988094603712935922058267960722848021141637928282196914799813735903119819254966726627736761991754456636332279732115877822888404241041543447827494816904600981569870707508307407584072775080746796686612448698476498170703550702037094145532454649764379791253218717616504020692114309770180490958255801105515579053382903069709041058059953374950242359842373147237895291085060180245748219"),
    pN9("23599653211631197588106784223605310838828035829743081952354063068366342179492776379632955018254100249675031830807690718850469262469097562498451464021692334810688663714807186791536573328578537341353931121076643085470713124765921517426020967828772167912624070824653748417348840798006196052368006124740212235810150903687890313905013950030765727171111420480451294668580247506999356749044146300098402120612457028459342156531791880131186879086493483563827974330779321868584188026607731287043816838670701612963484809956641972256146249825181762030222464649868695530755267704463236235127349768016732593497623405521115084078147"),
    pN10("31023673133603336783510777439378835195450554735155676795337980244629206707529732963414915181154473684643149971550240168026338743247308668803337635888028718861056005571271098076505570489888427385989600276829334911397835250413830408328126519496461012592671474663488472732970443539021055481289746583913898212650967218324827762032366276320302692685866122809794705810130554104214753051783181491724800895141654717716472433244315313714875393333335780748862638513262975021226661091100967887062480266841870472431773364334127033604916885821037386950518626430093418552671675457341940632195931325270637971032282350266798577725023");

    private String pN;


    private PrimeNumbersE(String pN) {
        this.pN = pN;
        // TODO Auto-generated constructor stub
    }


    public BigInteger getPn() {
        return new BigInteger(pN);
    }

}
